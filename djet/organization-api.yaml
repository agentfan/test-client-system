openapi: 3.0.1
info:
  title: Organization API
  description: Employee roles and responsibilities in an organization. Role defines
    different
  version: 1.0.0
servers:
- url: http://localhost:8090
  description: Development server
tags:
- name: EmployeesReadOnly
  description: Management of employees for the organization, restricted by properties.
    Interface can provide access to specific employee.
- name: OrganizationEmployees
  description: Management of employees for the organization, restricted by properties.
    Interface can provide access to specific employee.
- name: OrganizationRoles
  description: Management of organization roles for the organization, restricted by
    properties. Interface can provide access to specific organization role.
- name: OrganizationRolesReadOnly
  description: Management of organization roles for the organization, restricted by
    properties. Interface can provide access to specific organization role.
- name: OrganizationsReadOnly
  description: Management of organizations for the network party, restricted by properties.
    Interface can provide access to specific organization.
- name: PartyOrganizations
  description: Management of organizations for the network party, restricted by properties.
    Interface can provide access to specific organization.
paths:
  /employees/{employeeId}:
    get:
      tags:
      - EmployeesReadOnly
      summary: GetEmployee
      description: Get employee or list of employees from service.
      operationId: employeesReadOnlyGetEmployee
      parameters:
      - $ref: '#/components/parameters/EmployeesReadOnly-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/employeeId'
  /employees:
    get:
      tags:
      - EmployeesReadOnly
      summary: GetEmployeeList
      description: Get employee or list of employees from service.
      operationId: employeesReadOnlyGetEmployeeList
      parameters:
      - $ref: '#/components/parameters/EmployeesReadOnly-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters: []
  /organizations/{organizationId}/employees/{employeeId}:
    get:
      tags:
      - OrganizationEmployees
      summary: GetEmployee
      description: Get employee or list of employees from service.
      operationId: organizationEmployeesGetEmployee
      parameters:
      - $ref: '#/components/parameters/OrganizationEmployees-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - OrganizationEmployees
      summary: UpdateEmployee
      description: Change employee specification. Employee will be created if not
        exist.
      operationId: organizationEmployeesUpdateEmployee
      parameters:
      - $ref: '#/components/parameters/OrganizationEmployees-bearer'
      requestBody:
        $ref: '#/components/requestBodies/employee'
      responses:
        "204":
          description: Operation completed successfully without object returned.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - OrganizationEmployees
      summary: DeleteEmployee
      description: Delete employee of organization if the employee exists
      operationId: organizationEmployeesDeleteEmployee
      parameters:
      - $ref: '#/components/parameters/OrganizationEmployees-bearer'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - OrganizationEmployees
      summary: ModifyEmployee
      description: 'Change employee properties to values specified in request. Property
        not specified will remain same. No element of any collection will be deleted. '
      operationId: organizationEmployeesModifyEmployee
      parameters:
      - $ref: '#/components/parameters/OrganizationEmployees-bearer'
      requestBody:
        $ref: '#/components/requestBodies/employee'
      responses:
        "204":
          description: Operation completed successfully without object returned.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/employeeId'
    - $ref: '#/components/parameters/organizationId'
  /organizations/{organizationId}/employees:
    get:
      tags:
      - OrganizationEmployees
      summary: GetEmployeeList
      description: Get employee or list of employees from service.
      operationId: organizationEmployeesGetEmployeeList
      parameters:
      - $ref: '#/components/parameters/OrganizationEmployees-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Employee is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - OrganizationEmployees
      summary: CreateEmployee
      description: Create new employee. Validate employee not exist for this party
        yet.
      operationId: organizationEmployeesCreateEmployee
      parameters:
      - $ref: '#/components/parameters/OrganizationEmployees-bearer'
      requestBody:
        $ref: '#/components/requestBodies/employee'
      responses:
        "201":
          description: Create operation completed successfully.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Employee is already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/organizationId'
  /organizations/{organizationId}/organizationroles/{organizationRoleId}:
    get:
      tags:
      - OrganizationRoles
      summary: GetOrganizationRole
      description: Get organization role or list of employ roles from service.
      operationId: organizationRolesGetOrganizationRole
      parameters:
      - $ref: '#/components/parameters/OrganizationRoles-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRole'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - OrganizationRoles
      summary: UpdateOrganizationRole
      description: Change organization role specification. Organization role will
        be created if not exist.
      operationId: organizationRolesUpdateOrganizationRole
      parameters:
      - $ref: '#/components/parameters/OrganizationRoles-bearer'
      requestBody:
        $ref: '#/components/requestBodies/organizationRole'
      responses:
        "204":
          description: Operation completed successfully without object returned.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - OrganizationRoles
      summary: DeleteOrganizationRole
      description: Delete organization role if it exists
      operationId: organizationRolesDeleteOrganizationRole
      parameters:
      - $ref: '#/components/parameters/OrganizationRoles-bearer'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRole'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - OrganizationRoles
      summary: ModifyOrganizationRole
      description: 'Change organization role properties to values specified in request.
        Property not specified will remain same. No element of any collection will
        be deleted. '
      operationId: organizationRolesModifyOrganizationRole
      parameters:
      - $ref: '#/components/parameters/OrganizationRoles-bearer'
      requestBody:
        $ref: '#/components/requestBodies/organizationRole'
      responses:
        "204":
          description: Operation completed successfully without object returned.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/organizationId'
    - $ref: '#/components/parameters/organizationRoleId'
  /organizations/{organizationId}/organizationroles:
    get:
      tags:
      - OrganizationRoles
      summary: GetOrganizationRoleList
      description: Get organization role or list of employ roles from service.
      operationId: organizationRolesGetOrganizationRoleList
      parameters:
      - $ref: '#/components/parameters/OrganizationRoles-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationRole'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - OrganizationRoles
      summary: CreateOrganizationRole
      description: Create new organization role. Validate organization role not exist
        for this organization yet.
      operationId: organizationRolesCreateOrganizationRole
      parameters:
      - $ref: '#/components/parameters/OrganizationRoles-bearer'
      requestBody:
        $ref: '#/components/requestBodies/organizationRole'
      responses:
        "201":
          description: Create operation completed successfully.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Organization Role is already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/organizationId'
  /organizationroles/{organizationRoleId}:
    get:
      tags:
      - OrganizationRolesReadOnly
      summary: GetOrganizationRole
      description: Get organization role or list of employ roles from service.
      operationId: organizationRolesReadOnlyGetOrganizationRole
      parameters:
      - $ref: '#/components/parameters/OrganizationRolesReadOnly-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationRole'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/organizationRoleId'
  /organizationroles:
    get:
      tags:
      - OrganizationRolesReadOnly
      summary: GetOrganizationRoleList
      description: Get organization role or list of employ roles from service.
      operationId: organizationRolesReadOnlyGetOrganizationRoleList
      parameters:
      - $ref: '#/components/parameters/OrganizationRolesReadOnly-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationRole'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization Role is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters: []
  /organizations/{organizationtId}:
    get:
      tags:
      - OrganizationsReadOnly
      summary: GetOrganization
      description: Get organization or list of organizations from service.
      operationId: organizationsReadOnlyGetOrganization
      parameters:
      - $ref: '#/components/parameters/OrganizationsReadOnly-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/organizationtId'
  /organizations:
    get:
      tags:
      - OrganizationsReadOnly
      summary: GetOrganizationList
      description: Get organization or list of organizations from service.
      operationId: organizationsReadOnlyGetOrganizationList
      parameters:
      - $ref: '#/components/parameters/OrganizationsReadOnly-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters: []
  /parties/{partyId}/organizations/{organizationtId}:
    get:
      tags:
      - PartyOrganizations
      summary: GetOrganization
      description: Get organization or list of organizations from service.
      operationId: partyOrganizationsGetOrganization
      parameters:
      - $ref: '#/components/parameters/PartyOrganizations-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - PartyOrganizations
      summary: UpdateOrganization
      description: Change organization specification. Organization will be created
        if not exist.
      operationId: partyOrganizationsUpdateOrganization
      parameters:
      - $ref: '#/components/parameters/PartyOrganizations-bearer'
      requestBody:
        $ref: '#/components/requestBodies/organization'
      responses:
        "204":
          description: Operation completed successfully without object returned.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - PartyOrganizations
      summary: DeleteOrganization
      description: Delete organization of party
      operationId: partyOrganizationsDeleteOrganization
      parameters:
      - $ref: '#/components/parameters/PartyOrganizations-bearer'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - PartyOrganizations
      summary: ModifyOrganization
      description: 'Change organization properties to values specified in request.
        Property not specified will remain same. No element of any collection will
        be deleted. '
      operationId: partyOrganizationsModifyOrganization
      parameters:
      - $ref: '#/components/parameters/PartyOrganizations-bearer'
      requestBody:
        $ref: '#/components/requestBodies/organization'
      responses:
        "204":
          description: Operation completed successfully without object returned.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
    - $ref: '#/components/parameters/organizationtId'
  /parties/{partyId}/organizations:
    get:
      tags:
      - PartyOrganizations
      summary: GetOrganizationList
      description: Get organization or list of organizations from service.
      operationId: partyOrganizationsGetOrganizationList
      parameters:
      - $ref: '#/components/parameters/PartyOrganizations-bearer'
      - $ref: '#/components/parameters/options'
      - $ref: '#/components/parameters/startTime'
      - $ref: '#/components/parameters/endTime'
      - $ref: '#/components/parameters/search'
      responses:
        "200":
          description: Object is found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - PartyOrganizations
      summary: CreateOrganization
      description: Create new organization. Validate organization not exist for this
        party yet.
      operationId: partyOrganizationsCreateOrganization
      parameters:
      - $ref: '#/components/parameters/PartyOrganizations-bearer'
      requestBody:
        $ref: '#/components/requestBodies/organization'
      responses:
        "201":
          description: Create operation completed successfully.
        "400":
          description: Execution of user request failed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        "409":
          description: User don't have permissions to execute operation on the object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Organization is already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
    - $ref: '#/components/parameters/partyId'
components:
  schemas:
    Identity:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Id of the object. It is global unique identificator, optional
            for minor objects and required for major objects. When object created
            Id will be generated by backend service.
          format: uuid
          x-data-type: Guid
          x-usage: Key
        name:
          type: string
          description: Name of the object. It is textual object identificator, need
            to be unique inside folder of the object.
          x-data-type: String
          x-usage: Name
        description:
          type: string
          description: Description for the object functionality. It is text with specification
            of object and way it used in application.
          x-data-type: String
          x-usage: Description
      description: Identity of object in DifHub. Objects can be identify by globaly
        unique Id and localy unique name.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Identity
    EntityType:
      type: string
      description: Enumerator of entity types. Here listed all resources available
        in organization.
      enum:
      - USER
      - CONTACT
      - PERSON
      - PARTY
      - ACCOUNT
      - LEGALENTITY
      - FOLDER
      - PATIENT
      - PRACTITIONER
      x-enum-metadata:
      - name: User
        value: USER
        description: User of the Medical Network.
      - name: Contact
        value: CONTACT
        description: Contact information for organization or other entities.
      - name: Person
        value: PERSON
        description: Person represented in the system for contact.
      - name: Party
        value: PARTY
        description: Main component of the network
      - name: Account
        value: ACCOUNT
        description: Party account for financial transactions.
      - name: Legal Entity
        value: LEGALENTITY
        description: Legal entity information for the party.
      - name: Folder
        value: FOLDER
        description: Folder to collect personal information.
      - name: Patient
        value: PATIENT
        description: Patient personal information
      - name: Practitioner
        value: PRACTITIONER
        description: Personal data for practitioner.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/EntityType
    EntityState:
      type: string
      description: Enumerator of the entity state.
      enum:
      - DRAFT
      - PENDING
      - ACTIVE
      - RETIRED
      - ERROR
      x-enum-metadata:
      - name: Draft
        value: DRAFT
        description: Entity in draft state and not ready yet for approval.
      - name: Pending
        value: PENDING
        description: Entity pending approval and can't be used.
      - name: Active
        value: ACTIVE
        description: Entity in active state and can be used.
      - name: Retired
        value: RETIRED
        description: Entity retired and cannot be executed any more.
      - name: Error
        value: ERROR
        description: Entity in have error and can't be used.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/EntityState
    BindingType:
      type: string
      description: Binding type represent system we are binding our entity to.
      enum:
      - ERP
      x-enum-metadata:
      - name: 'ERP '
        value: ERP
        description: Corporate ERP system used in company.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/BindingType
    Binding:
      required:
      - identity
      - type
      type: object
      properties:
        identity:
          description: Binding identity in system it imported from or exported to.
            Id is globally unique. Name is unique binding name inside entity only.
          allOf:
          - $ref: '#/components/schemas/Identity'
          x-data-type: Structure
          x-usage: Property
        type:
          description: Type of binding defines system we bind to.
          allOf:
          - $ref: '#/components/schemas/BindingType'
          x-data-type: Enum
          x-usage: Value
        code:
          type: string
          description: Code of object in system we bind to if different from id.
          x-data-type: String
          x-usage: Value
      description: Binding represents connection of entity to entity in other external
        systems. It can be system where entity actually originated ond from which
        it was imported or system where entity exported.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Binding
    Completion:
      required:
      - status
      type: object
      properties:
        status:
          description: Completion Status for some state of execution.
          allOf:
          - $ref: '#/components/schemas/EntityState'
          x-data-type: Enum
          x-usage: Value
        completedAt:
          type: string
          description: Date of status acived and satge of activity completed.
          format: date-time
          x-data-type: DateTime
          x-usage: Property
        completedBy:
          maxLength: 256
          type: string
          description: Person documented completion of this stage by user name.
          x-data-type: String
          x-usage: Property
        completedNote:
          type: string
          description: Note provided by operator on completion.
          x-data-type: String
          x-usage: Property
        completedMessage:
          type: string
          description: This is link to message, which change status of the issue to
            specified by this completion.
          x-data-type: String
          x-usage: Property
      description: 'Completion status for stage of execution like: finilization, aproval
        and so on.'
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Completion
    History:
      required:
      - updatedAt
      type: object
      properties:
        createdAt:
          type: string
          description: Date of object creation.
          format: date-time
          x-data-type: DateTime
          x-usage: Property
        createdBy:
          maxLength: 256
          type: string
          description: User created object.
          x-data-type: String
          x-usage: Property
        updatedAt:
          type: string
          description: Date of object last update. This is important value as it is
            flag for optimistic commit to detect overriding changes.
          format: date-time
          x-data-type: DateTime
          x-usage: Property
        updatedBy:
          maxLength: 256
          type: string
          description: User last updated object.
          x-data-type: String
          x-usage: Property
        updatedNote:
          type: string
          description: Mote about goal of object update.
          x-data-type: String
          x-usage: Property
        updatedMessage:
          type: string
          description: Message in issue associated with changes in object.
          x-data-type: String
          x-usage: Property
        ' reviewedAt':
          type: string
          description: Date object last update was reviewed by owner. This is indicates
            user see and aknowalage change.
          format: date-time
          x-data-type: DateTime
          x-usage: Property
        ' reviewedBy':
          maxLength: 256
          type: string
          description: User who reviewed and acknowledge the last update changes.
          x-data-type: String
          x-usage: Property
        retiredAt:
          type: string
          description: Date object was retired.
          format: date-time
          x-data-type: DateTime
          x-usage: Property
        retiredBy:
          maxLength: 256
          type: string
          description: User retired object.
          x-data-type: String
          x-usage: Property
        completions:
          type: array
          description: Array of completion statuses reached by this object.
          items:
            description: Array of completion statuses reached by this object.
            allOf:
            - $ref: '#/components/schemas/Completion'
            x-data-type: Structure
            x-usage: Property
      description: Structure for object history. Object history provides information
        when object was updated and in what completion state it is now.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/History
    Period:
      type: object
      properties:
        start:
          type: string
          description: Starting time with inclusive boundary
          format: date-time
          x-data-type: DateTime
          x-usage: Property
          x-format: YYYY-MM-DD
        end:
          type: string
          description: End time with inclusive boundary, if not ongoing.
          format: date-time
          x-data-type: DateTime
          x-usage: Property
          x-format: YYYY-MM-DD
      description: |-
        A time period defined by a start and end date/time.
        A period specifies a range of times. The context of use will specify whether the entire range applies (e.g. "the patient was an inpatient of the hospital for this time range") or one value from the period applies (e.g. "give to the patient between 2 and 4 pm on 24-Jun 2013"). This is simple period used not as part of array of elements.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Period
    Element:
      type: object
      properties:
        order:
          type: integer
          description: Order of element in list. Order can be defined by user or selected
            by system. Most common order is order of introduction.
          x-data-type: Integer
          x-usage: Property
        ' rank':
          type: integer
          description: Rank of the element in list. 1 - is a highest rank.
          x-data-type: Integer
          x-usage: Property
        period:
          description: Time period element apply to. If period not close, it is current
            element. If period closed, it is element relevant for this period.
          allOf:
          - $ref: '#/components/schemas/Period'
          x-data-type: Structure
          x-usage: Property
      description: |-
        The base definition for all elements contained inside a resource. All elements, whether defined as a Data Type (including primitives) or as part of a resource structure, have this base content:

        Extensions
        An internal id
        There are 3 kinds of descendent types that specialize Element:

        Primitive data types, that add a primitive value property of the specified type
        Complex data types, that add their own children (all of which are also elements)
        BackboneElement, A specialization that adds modifierExtension, which is the super-type of all the element types defined in resource definitions (e.g. Patient.contact)
        Note that resources themselves all specialize the base type Resource.

        http://build.fhir.org//element.html
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Element
    Locale:
      type: string
      description: Enumerator of supported locales.
      enum:
      - Locale id
      - af
      - sq
      - am
      - ar-dz
      - ar-bh
      - ar-eg
      - ar-iq
      - ar-jo
      - ar-kw
      - ar-lb
      - ar-ly
      - ar-ma
      - ar-om
      - ar-qa
      - ar-sa
      - ar-sy
      - ar-tn
      - ar-ae
      - ar-ye
      - hy
      - as
      - az-az
      - az-az
      - eu
      - be
      - bn
      - bn
      - bs
      - bg
      - my
      - ca
      - zh-cn
      - zh-hk
      - zh-mo
      - zh-sg
      - zh-tw
      - cs
      - da
      - nl-be
      - nl-nl
      - en-au
      - en-bz
      - en-ca
      - en-cb
      - en-gb
      - en-in
      - en-ie
      - en-jm
      - en-nz
      - en-ph
      - en-za
      - en-tt
      - en-us
      - ""
      - et
      - mk
      - fo
      - fa
      - ""
      - fi
      - fr-be
      - ""
      - fr-ca
      - ""
      - ""
      - fr-fr
      - fr-lu
      - ""
      - ""
      - ""
      - fr-ch
      - ""
      - ""
      - gd-ie
      - gd
      - ""
      - ka
      - de-at
      - de-de
      - de-li
      - de-lu
      - de-ch
      - el
      - gn
      - gu
      - he
      - hi
      - hu
      - is
      - ""
      - id
      - it-it
      - it-ch
      - ja
      - kn
      - ks
      - kk
      - km
      - ""
      - ko
      - ""
      - lo
      - la
      - lt
      - ms-bn
      - ms-my
      - ml
      - mt
      - ""
      - mi
      - mr
      - mn
      - ne
      - no-no
      - no-no
      - or
      - pl
      - pt-br
      - pt-pt
      - pa
      - rm
      - ro-mo
      - ro
      - ru
      - ru-mo
      - ""
      - sa
      - sr-sp
      - sr-sp
      - ""
      - tn
      - sd
      - si
      - sk
      - sl
      - so
      - sb
      - es-ar
      - es-bo
      - es-cl
      - es-co
      - es-cr
      - es-do
      - es-ec
      - es-sv
      - es-gt
      - es-hn
      - es-mx
      - es-ni
      - es-pa
      - es-py
      - es-pe
      - es-pr
      - es-es
      - es-uy
      - es-ve
      - sw
      - sv-fi
      - sv-se
      - ""
      - tg
      - ta
      - tt
      - te
      - th
      - bo
      - ts
      - tr
      - tk
      - uk
      - ur
      - uz-uz
      - ""
      - vi
      - cy
      - xh
      - yi
      x-enum-metadata:
      - name: Locale Name
        value: Locale id
        description: Locale id
      - name: Afrikaans
        value: af
        description: af
      - name: Albanian
        value: sq
        description: sq
      - name: Amharic
        value: am
        description: am
      - name: Arabic - Algeria
        value: ar-dz
        description: ar-dz
      - name: Arabic - Bahrain
        value: ar-bh
        description: ar-bh
      - name: Arabic - Egypt
        value: ar-eg
        description: ar-eg
      - name: Arabic - Iraq
        value: ar-iq
        description: ar-iq
      - name: Arabic - Jordan
        value: ar-jo
        description: ar-jo
      - name: Arabic - Kuwait
        value: ar-kw
        description: ar-kw
      - name: Arabic - Lebanon
        value: ar-lb
        description: ar-lb
      - name: Arabic - Libya
        value: ar-ly
        description: ar-ly
      - name: Arabic - Morocco
        value: ar-ma
        description: ar-ma
      - name: Arabic - Oman
        value: ar-om
        description: ar-om
      - name: Arabic - Qatar
        value: ar-qa
        description: ar-qa
      - name: Arabic - Saudi Arabia
        value: ar-sa
        description: ar-sa
      - name: Arabic - Syria
        value: ar-sy
        description: ar-sy
      - name: Arabic - Tunisia
        value: ar-tn
        description: ar-tn
      - name: Arabic - United Arab Emirates
        value: ar-ae
        description: ar-ae
      - name: Arabic - Yemen
        value: ar-ye
        description: ar-ye
      - name: Armenian
        value: hy
        description: hy
      - name: Assamese
        value: as
        description: as
      - name: Azeri - Cyrillic
        value: az-az
        description: az-az
      - name: Azeri - Latin
        value: az-az
        description: az-az
      - name: Basque
        value: eu
        description: eu
      - name: Belarusian
        value: be
        description: be
      - name: Bengali - Bangladesh
        value: bn
        description: bn
      - name: Bengali - India
        value: bn
        description: bn
      - name: Bosnian
        value: bs
        description: bs
      - name: Bulgarian
        value: bg
        description: bg
      - name: Burmese
        value: my
        description: my
      - name: Catalan
        value: ca
        description: ca
      - name: Chinese - China
        value: zh-cn
        description: zh-cn
      - name: Chinese - Hong Kong SAR
        value: zh-hk
        description: zh-hk
      - name: Chinese - Macau SAR
        value: zh-mo
        description: zh-mo
      - name: Chinese - Singapore
        value: zh-sg
        description: zh-sg
      - name: Chinese - Taiwan
        value: zh-tw
        description: zh-tw
      - name: Croatian
        value: cs
        description: cs
      - name: Danish
        value: da
        description: da
      - name: Dutch - Belgium
        value: nl-be
        description: nl-be
      - name: Dutch - Netherlands
        value: nl-nl
        description: nl-nl
      - name: English - Australia
        value: en-au
        description: en-au
      - name: English - Belize
        value: en-bz
        description: en-bz
      - name: English - Canada
        value: en-ca
        description: en-ca
      - name: English - Caribbean
        value: en-cb
        description: en-cb
      - name: English - Great Britain
        value: en-gb
        description: en-gb
      - name: English - India
        value: en-in
        description: en-in
      - name: English - Ireland
        value: en-ie
        description: en-ie
      - name: English - Jamaica
        value: en-jm
        description: en-jm
      - name: English - New Zealand
        value: en-nz
        description: en-nz
      - name: English - Phillippines
        value: en-ph
        description: en-ph
      - name: English - Southern Africa
        value: en-za
        description: en-za
      - name: English - Trinidad
        value: en-tt
        description: en-tt
      - name: English - United States
        value: en-us
        description: en-us
      - name: English - Zimbabwe
        value: ""
        description: ""
      - name: Estonian
        value: et
        description: et
      - name: FYRO Macedonia
        value: mk
        description: mk
      - name: Faroese
        value: fo
        description: fo
      - name: Farsi - Persian
        value: fa
        description: fa
      - name: Filipino
        value: ""
        description: ""
      - name: Finnish
        value: fi
        description: fi
      - name: French - Belgium
        value: fr-be
        description: fr-be
      - name: French - Cameroon
        value: ""
        description: ""
      - name: French - Canada
        value: fr-ca
        description: fr-ca
      - name: French - Congo
        value: ""
        description: ""
      - name: French - Cote d'Ivoire
        value: ""
        description: ""
      - name: French - France
        value: fr-fr
        description: fr-fr
      - name: French - Luxembourg
        value: fr-lu
        description: fr-lu
      - name: French - Mali
        value: ""
        description: ""
      - name: French - Morocco
        value: ""
        description: ""
      - name: French - Senegal
        value: ""
        description: ""
      - name: French - Switzerland
        value: fr-ch
        description: fr-ch
      - name: French - West Indies
        value: ""
        description: ""
      - name: Frisian - Netherlands
        value: ""
        description: ""
      - name: Gaelic - Ireland
        value: gd-ie
        description: gd-ie
      - name: Gaelic - Scotland
        value: gd
        description: gd
      - name: Galician
        value: ""
        description: ""
      - name: Georgian
        value: ka
        description: ka
      - name: German - Austria
        value: de-at
        description: de-at
      - name: German - Germany
        value: de-de
        description: de-de
      - name: German - Liechtenstein
        value: de-li
        description: de-li
      - name: German - Luxembourg
        value: de-lu
        description: de-lu
      - name: German - Switzerland
        value: de-ch
        description: de-ch
      - name: Greek
        value: el
        description: el
      - name: Guarani - Paraguay
        value: gn
        description: gn
      - name: Gujarati
        value: gu
        description: gu
      - name: Hebrew
        value: he
        description: he
      - name: Hindi
        value: hi
        description: hi
      - name: Hungarian
        value: hu
        description: hu
      - name: Icelandic
        value: is
        description: is
      - name: Igbo - Nigeria
        value: ""
        description: ""
      - name: Indonesian
        value: id
        description: id
      - name: Italian - Italy
        value: it-it
        description: it-it
      - name: Italian - Switzerland
        value: it-ch
        description: it-ch
      - name: Japanese
        value: ja
        description: ja
      - name: Kannada
        value: kn
        description: kn
      - name: Kashmiri
        value: ks
        description: ks
      - name: Kazakh
        value: kk
        description: kk
      - name: Khmer
        value: km
        description: km
      - name: Konkani
        value: ""
        description: ""
      - name: Korean
        value: ko
        description: ko
      - name: Kyrgyz - Cyrillic
        value: ""
        description: ""
      - name: Lao
        value: lo
        description: lo
      - name: Latin
        value: la
        description: la
      - name: Latvian
        value: lt
        description: lt
      - name: Malay - Brunei
        value: ms-bn
        description: ms-bn
      - name: Malay - Malaysia
        value: ms-my
        description: ms-my
      - name: Malayalam
        value: ml
        description: ml
      - name: Maltese
        value: mt
        description: mt
      - name: Manipuri
        value: ""
        description: ""
      - name: Maori
        value: mi
        description: mi
      - name: Marathi
        value: mr
        description: mr
      - name: Mongolian
        value: mn
        description: mn
      - name: Nepali
        value: ne
        description: ne
      - name: Norwegian - Bokml
        value: no-no
        description: no-no
      - name: Norwegian - Nynorsk
        value: no-no
        description: no-no
      - name: Oriya
        value: or
        description: or
      - name: Polish
        value: pl
        description: pl
      - name: Portuguese - Brazil
        value: pt-br
        description: pt-br
      - name: Portuguese - Portugal
        value: pt-pt
        description: pt-pt
      - name: Punjabi
        value: pa
        description: pa
      - name: Raeto-Romance
        value: rm
        description: rm
      - name: Romanian - Moldova
        value: ro-mo
        description: ro-mo
      - name: Romanian - Romania
        value: ro
        description: ro
      - name: Russian
        value: ru
        description: ru
      - name: Russian - Moldova
        value: ru-mo
        description: ru-mo
      - name: Sami Lappish
        value: ""
        description: ""
      - name: Sanskrit
        value: sa
        description: sa
      - name: Serbian - Cyrillic
        value: sr-sp
        description: sr-sp
      - name: Serbian - Latin
        value: sr-sp
        description: sr-sp
      - name: Sesotho (Sutu)
        value: ""
        description: ""
      - name: Setsuana
        value: tn
        description: tn
      - name: Sindhi
        value: sd
        description: sd
      - name: Sinhala Sinhalese
        value: si
        description: si
      - name: Slovak
        value: sk
        description: sk
      - name: Slovenian
        value: sl
        description: sl
      - name: Somali
        value: so
        description: so
      - name: Sorbian
        value: sb
        description: sb
      - name: Spanish - Argentina
        value: es-ar
        description: es-ar
      - name: Spanish - Bolivia
        value: es-bo
        description: es-bo
      - name: Spanish - Chile
        value: es-cl
        description: es-cl
      - name: Spanish - Colombia
        value: es-co
        description: es-co
      - name: Spanish - Costa Rica
        value: es-cr
        description: es-cr
      - name: Spanish - Dominican Republic
        value: es-do
        description: es-do
      - name: Spanish - Ecuador
        value: es-ec
        description: es-ec
      - name: Spanish - El Salvador
        value: es-sv
        description: es-sv
      - name: Spanish - Guatemala
        value: es-gt
        description: es-gt
      - name: Spanish - Honduras
        value: es-hn
        description: es-hn
      - name: Spanish - Mexico
        value: es-mx
        description: es-mx
      - name: Spanish - Nicaragua
        value: es-ni
        description: es-ni
      - name: Spanish - Panama
        value: es-pa
        description: es-pa
      - name: Spanish - Paraguay
        value: es-py
        description: es-py
      - name: Spanish - Peru
        value: es-pe
        description: es-pe
      - name: Spanish - Puerto Rico
        value: es-pr
        description: es-pr
      - name: Spanish - Spain (Traditional)
        value: es-es
        description: es-es
      - name: Spanish - Uruguay
        value: es-uy
        description: es-uy
      - name: Spanish - Venezuela
        value: es-ve
        description: es-ve
      - name: Swahili
        value: sw
        description: sw
      - name: Swedish - Finland
        value: sv-fi
        description: sv-fi
      - name: Swedish - Sweden
        value: sv-se
        description: sv-se
      - name: Syriac
        value: ""
        description: ""
      - name: Tajik
        value: tg
        description: tg
      - name: Tamil
        value: ta
        description: ta
      - name: Tatar
        value: tt
        description: tt
      - name: Telugu
        value: te
        description: te
      - name: Thai
        value: th
        description: th
      - name: Tibetan
        value: bo
        description: bo
      - name: Tsonga
        value: ts
        description: ts
      - name: Turkish
        value: tr
        description: tr
      - name: Turkmen
        value: tk
        description: tk
      - name: Ukrainian
        value: uk
        description: uk
      - name: Urdu
        value: ur
        description: ur
      - name: Uzbek - Cyrillic
        value: uz-uz
        description: uz-uz
      - name: Venda
        value: ""
        description: ""
      - name: Vietnamese
        value: vi
        description: vi
      - name: Welsh
        value: cy
        description: cy
      - name: Zulu
        value: xh
        description: xh
      - name: Yiddish
        value: yi
        description: yi
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Locale
    Attachment:
      required:
      - ' id'
      type: object
      properties:
        ' id':
          type: string
          description: Guid of the attachment
          format: uuid
          x-data-type: Guid
          x-usage: Property
        header:
          description: Management information for document
          allOf:
          - $ref: '#/components/schemas/Element'
          x-data-type: Structure
          x-usage: Property
        contentType:
          maxLength: 100
          type: string
          description: Mime type of the content, with charset etc.
          x-data-type: String
          x-usage: Property
        language:
          description: Human language of the content (BCP-47)
          allOf:
          - $ref: '#/components/schemas/Locale'
          x-data-type: Enum
          x-usage: Property
        data:
          maxLength: 2048
          type: string
          description: Data inline, base64ed
          x-data-type: String
          x-usage: Property
        url:
          type: string
          description: Uri where the data can be found
          x-data-type: String
          x-usage: Property
          x-format: URI
        size:
          type: object
          description: Number of bytes of content (if url provided)
          x-data-type: Unsigned Integer
          x-usage: Property
        hash:
          maxLength: 2048
          type: string
          description: Hash of the data (sha-1, base64ed)
          x-data-type: String
          x-usage: Property
        title:
          type: string
          description: Label to display in place of the data
          x-data-type: String
          x-usage: Property
        creation:
          type: string
          description: Date attachment was first created
          format: date-time
          x-data-type: DateTime
          x-usage: Property
      description: |-
        This type is for containing or referencing attachments - additional data content defined in other formats. The most common use of this type is to include images or reports in some report format such as PDF. However it can be used for any data that has a MIME type.

        http://build.fhir.org//datatypes.html#Attachment
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Attachment
    Entity:
      required:
      - parent
      type: object
      properties:
        parent:
          description: |-
            Reference to id of folder for current entity. It include full URI of parent entity in name always
            starting from party.
          allOf:
          - $ref: '#/components/schemas/Identity'
          x-data-type: Structure
          x-usage: Property
        type:
          description: Type of the entity.
          allOf:
          - $ref: '#/components/schemas/EntityType'
          x-data-type: Enum
          x-usage: Value
        state:
          description: State of the entity
          allOf:
          - $ref: '#/components/schemas/EntityState'
          x-data-type: Enum
          x-usage: Value
        ' alias':
          type: array
          description: List of additional names for the entity.
          items:
            type: string
            description: List of additional names for the entity.
            x-data-type: String
            x-usage: Property
        token:
          type: string
          description: Encrypted token for access to entity data.
          x-data-type: String
          x-usage: Property
        containingFolder:
          type: string
          description: The folder that is the container of the entity
          format: uuid
          x-data-type: Guid
          x-usage: Property
        managingOrganization:
          type: string
          description: The organization that is the custodian of the entity
          format: 'system: Client | application: Organization | dataType: Organization'
          x-data-type: Reference
          x-usage: Property
        source:
          description: Source system originated the entity. If not specified entity
            instantiated by core system.
          allOf:
          - $ref: '#/components/schemas/BindingType'
          x-data-type: Enum
          x-usage: Value
        bindings:
          type: array
          description: Reference to entity system bind to.
          items:
            description: Reference to entity system bind to.
            allOf:
            - $ref: '#/components/schemas/Binding'
            x-data-type: Structure
            x-usage: Property
        tags:
          type: array
          description: List of tags for entity association.
          items:
            description: List of tags for entity association.
            allOf:
            - $ref: '#/components/schemas/Identity'
            x-data-type: Structure
            x-usage: Property
        history:
          description: History of the entity instance.
          allOf:
          - $ref: '#/components/schemas/History'
          x-data-type: Structure
          x-usage: Property
        attachments:
          type: array
          description: Attachments for the entity. It is a Structure to attach data
            to any Resource in various formats, like URL, base64, etc.
          items:
            description: Attachments for the entity. It is a Structure to attach data
              to any Resource in various formats, like URL, base64, etc.
            allOf:
            - $ref: '#/components/schemas/Attachment'
            x-data-type: Structure
            x-usage: Property
      description: Updatable entity. Entity can be accessed by API and referenced.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Entity
    EmployeeType:
      type: string
      description: 'Type of employee for parties in the Network. '
      enum:
      - PERMANENT
      - TEMPORARY
      - VENDOR
      - CANDIDATE
      - VACANT
      x-enum-metadata:
      - name: Permanent
        value: PERMANENT
        description: Permanent employee of organization.
      - name: Temporary
        value: TEMPORARY
        description: Temporary employee of organization working by contract.
      - name: Vendor
        value: VENDOR
        description: Employee from external provider organization.
      - name: Candidate
        value: CANDIDATE
        description: Position open and have candidate in hiring process.
      - name: Vacancy
        value: VACANT
        description: Position open and waiting for candidate.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/EmployeeType
    ReferenceOrganizationRole:
      type: object
      properties:
        id:
          type: string
          description: Optional URI of the target Resource
        resourceId:
          type: string
          description: Optional URI of the target Resource
        name:
          type: string
          description: Optional URI of the target Resource
        description:
          type: string
          description: Description of the Reference, can be target Resource description
            or custom one
          x-usage: Description
        type:
          type: string
          description: Optional URI of the target Resource
        uri:
          type: string
          description: Optional URI of the target Resource
      description: Complex structure to describe referenced resource
    EmployeeRole:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Guid of the structure
          format: uuid
          x-data-type: Guid
          x-usage: Property
        header:
          description: This header of element with id and period of element activity.
          allOf:
          - $ref: '#/components/schemas/Element'
          x-data-type: Structure
          x-usage: Property
        assignedRole:
          description: Organization role assigned to employee
          allOf:
          - $ref: '#/components/schemas/ReferenceOrganizationRole'
          x-data-type: Reference
          x-usage: Property
          x-format: Identity
        excludedServices:
          type: array
          description: List of services excluded from employee permission list.
          items:
            type: string
            description: List of services excluded from employee permission list.
            format: 'system: Client | application: Product | dataType: Product'
            x-data-type: Reference
            x-usage: Property
        roleSchedule:
          type: string
          description: Schedule for availability of employee to perform specified
            role. Schedule of employee defines when he available to execute any of
            his roles. This schedule define his availability for this role only.
          format: 'system: Client | application: Datasets | dataType: Schedule'
          x-data-type: Reference
          x-usage: Property
      description: |
        Role assigned to Employee from organization list of roles.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/EmployeeRole
    ReferenceIdentity:
      type: object
      properties:
        id:
          type: string
          description: Optional URI of the target Resource
        resourceId:
          type: string
          description: Optional URI of the target Resource
        name:
          type: string
          description: Optional URI of the target Resource
        description:
          type: string
          description: Description of the Reference, can be target Resource description
            or custom one
          x-usage: Description
        type:
          type: string
          description: Optional URI of the target Resource
        uri:
          type: string
          description: Optional URI of the target Resource
      description: Complex structure to describe referenced resource
    Employee:
      required:
      - identity
      type: object
      properties:
        identity:
          description: Employee identity in party. FOR Identity, we will use Guid
            for globally unique employee id. Name specify human friendly id for employee
            in the party and need to be unique inside party.
          allOf:
          - $ref: '#/components/schemas/Identity'
          x-data-type: Structure
          x-usage: Property
        entity:
          description: Employee is a  resource used by API.  Entity maintain most
            common resource information. Parent for entity of organization is a party.
          allOf:
          - $ref: '#/components/schemas/Entity'
          x-data-type: Structure
          x-usage: Property
        type:
          description: 'Type of the employee in organization. '
          allOf:
          - $ref: '#/components/schemas/EmployeeType'
          x-data-type: Enum
          x-usage: Property
        partOf:
          type: array
          description: Reference to organizations employee assign to.
          items:
            type: string
            description: Reference to organizations employee assign to.
            format: 'system: Client | application: Organization | dataType: Organization'
            x-data-type: Reference
            x-usage: Property
        role:
          type: array
          description: List of roles employee represents in organizations. Usually
            employee associated only with one resource, but it can be employee handle
            multiple functions in clinic. Schedule will define what time employee
            operate in specific role.
          items:
            description: List of roles employee represents in organizations. Usually
              employee associated only with one resource, but it can be employee handle
              multiple functions in clinic. Schedule will define what time employee
              operate in specific role.
            allOf:
            - $ref: '#/components/schemas/EmployeeRole'
            x-data-type: Structure
            x-usage: Property
        reference:
          description: Reference to actual employee specification for industry. Resource
            defined in organization of industry. For healthcare it will be practitioner.
          allOf:
          - $ref: '#/components/schemas/ReferenceIdentity'
          x-data-type: Reference
          x-usage: Property
          x-format: Reference(Practitioner)
        schedule:
          type: string
          description: Reference to schedule for employee in schedule service. This
            is when employee available for any role he have in organization. When
            employee have multiple role and separate availability per role, it can
            be specified in schedule of employee role.
          format: 'system: Client | application: Datasets | dataType: Schedule'
          x-data-type: Reference
          x-usage: Property
      description: Organization represents departments party have and hierarchical
        organization of departments inside party.
      x-data-type: Resource
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/Employee
    OrganizationType:
      type: string
      description: |-
        This value set defines a set of codes that can be used to indicate a type of organization.
        http://hl7.org/fhir/ValueSet/organization-type
      enum:
      - prov
      - dept
      - team
      - govt
      - ins
      - pay
      - edu
      - reli
      - crs
      - cg
      - bus
      - other
      x-enum-metadata:
      - name: Healthcare Provider
        value: prov
        description: An organization that provides healthcare services.
      - name: Hospital Department
        value: dept
        description: A department or ward within a hospital (Generally is not applicable
          to top level organizations)
      - name: Organizational team
        value: team
        description: An organizational team is usually a grouping of practitioners
          that perform a specific function within an organization (which could be
          a top level organization, or a department).
      - name: Government
        value: govt
        description: A political body, often used when including organization records
          for government bodies such as a Federal Government, State or Local Government.
      - name: Insurance Company
        value: ins
        description: A company that provides insurance to its subscribers that may
          include healthcare related policies.
      - name: Payer
        value: pay
        description: A company, charity, or governmental organization which processes
          claims and/or issues payments to providers on behalf of patients or groups
          of patients.
      - name: Educational Institute
        value: edu
        description: An educational institution that provides education or research
          facilities.
      - name: Religious Institution
        value: reli
        description: An organization that is identified as a part of a religious institution.
      - name: Clinical Research Sponsor
        value: crs
        description: An organization that is identified as a Pharmaceutical/Clinical
          Research Sponsor.
      - name: Community Group
        value: cg
        description: An un-incorporated community group.
      - name: Non-Healthcare Business or Corporation
        value: bus
        description: An organization that is a registered business or corporation
          but not identified by other types.
      - name: Other
        value: other
        description: Other type of organization not already specified.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/OrganizationType
    ReferenceLocation:
      type: object
      properties:
        id:
          type: string
          description: Optional URI of the target Resource
        resourceId:
          type: string
          description: Optional URI of the target Resource
        name:
          type: string
          description: Optional URI of the target Resource
        description:
          type: string
          description: Description of the Reference, can be target Resource description
            or custom one
          x-usage: Description
        type:
          type: string
          description: Optional URI of the target Resource
        uri:
          type: string
          description: Optional URI of the target Resource
      description: Complex structure to describe referenced resource
    Organization:
      required:
      - identity
      type: object
      properties:
        identity:
          description: ""
          allOf:
          - $ref: '#/components/schemas/Identity'
          x-data-type: Structure
          x-usage: Property
        entity:
          description: Organization is a resource used by API. Entity maintain most
            common resource information. Parent for entity of organization is a party.
          allOf:
          - $ref: '#/components/schemas/Entity'
          x-data-type: Structure
          x-usage: Property
        type:
          type: array
          description: Type of application from external information system, Can be
            used for type of medical organizations.
          items:
            description: Type of application from external information system, Can
              be used for type of medical organizations.
            allOf:
            - $ref: '#/components/schemas/OrganizationType'
            x-data-type: Enum
            x-usage: Value
        partOf:
          type: string
          description: The organization of which this organization forms a part.
          format: 'system: Client | application: Organization | dataType: Organization'
          x-data-type: Reference
          x-usage: Property
        location:
          type: array
          description: A of locations organization presented in.
          items:
            description: A of locations organization presented in.
            allOf:
            - $ref: '#/components/schemas/ReferenceLocation'
            x-data-type: Reference
            x-usage: Property
            x-format: Identity
        contact:
          type: array
          description: Contact for the organization for a certain purpose
          items:
            type: string
            description: Contact for the organization for a certain purpose
            format: 'system: Client | application: User | dataType: Contact'
            x-data-type: Reference
            x-usage: Property
        legal:
          type: string
          description: Legal entity organization operates under.
          format: 'system: Client | application: Party | dataType: LegalEntity'
          x-data-type: Reference
          x-usage: Property
        account:
          type: string
          description: Account organization use for settlement.
          format: 'system: Client | application: Party | dataType: Account'
          x-data-type: Reference
          x-usage: Property
      description: |-
        https://www.hl7.org/FHIR/organization.html

        Organization represents departments party have and hierarchical organization of departments inside party.

        A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action. Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.
      x-data-type: Resource
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/Organization
    OrganizationRoleType:
      type: string
      description: Type of organization role defines actual service and resource for
        role of different types. Service will safe resources of this type of role.
      enum:
      - practitioner
      x-enum-metadata:
      - name: Practitioner
        value: practitioner
        description: Role for healthcare prectiotioner.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/OrganizationRoleType
    Coding:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Guid of the structure
          x-data-type: String
          x-usage: Property
        header:
          description: Header of coding element
          allOf:
          - $ref: '#/components/schemas/Element'
          x-data-type: Structure
          x-usage: Value
        version:
          maxLength: 256
          type: string
          description: Version of the system - if relevant
          x-data-type: String
          x-usage: Property
        code:
          maxLength: 64
          type: string
          description: Symbol in syntax defined by the system
          x-data-type: String
          x-usage: Property
          x-format: CODE
        display:
          type: string
          description: Representation defined by the system
          x-data-type: String
          x-usage: Property
        userSelected:
          type: boolean
          description: If this coding was chosen directly by the user
          x-data-type: Boolean
          x-usage: Property
        system:
          type: string
          description: Identity of the terminology system
          x-data-type: String
          x-usage: Property
          x-format: URI
      description: A Coding is a representation of a defined concept using a symbol
        from a defined "code system"
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Coding
    CodeableConcept:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Guid of the structure
          format: uuid
          x-data-type: Guid
          x-usage: Property
        header:
          description: Header of codable concept element
          allOf:
          - $ref: '#/components/schemas/Element'
          x-data-type: Structure
          x-usage: Value
        coding:
          type: array
          description: Code defined by a terminology system. It can be list of different
            codes.
          items:
            description: Code defined by a terminology system. It can be list of different
              codes.
            allOf:
            - $ref: '#/components/schemas/Coding'
            x-data-type: Structure
            x-usage: Property
        text:
          type: string
          description: Plain text representation of the concept
          x-data-type: String
          x-usage: Property
      description: |-
        A CodeableConcept represents a value that is usually supplied by providing a reference to one or more terminologies or ontologies but may also be defined by the provision of text. This is a common pattern in healthcare data.
        Concept - reference to a terminology or just text.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/CodeableConcept
    WeekDay:
      type: string
      description: Enumerator Names of the days of the weeks by ISO 8601 and RFC 3339.
      enum:
      - MONDAY
      - TUESDAT
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      x-enum-metadata:
      - name: Monday
        value: MONDAY
        description: First day of the week by ISO 8601.
      - name: Tuesday
        value: TUESDAT
        description: Second day of the week by ISO 8601.
      - name: Wednesday
        value: WEDNESDAY
        description: Third day of the week by ISO 8601.
      - name: Thursday
        value: THURSDAY
        description: Fourth day of the week by ISO 8601.
      - name: Friday
        value: FRIDAY
        description: Fifth day of the week by ISO 8601.
      - name: Saturday
        value: SATURDAY
        description: Sixth day of the week by ISO 8601.
      - name: Sunday
        value: SUNDAY
        description: Seventh day of the week by ISO 8601.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/WeekDay
    AvailableTime:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Identity of category in the product line.
          format: uuid
          x-data-type: Guid
          x-usage: Property
        header:
          description: This header of element with order and period of element activity.
          allOf:
          - $ref: '#/components/schemas/Element'
          x-data-type: Structure
          x-usage: Property
        daysOfWeek:
          type: array
          description: |+
            Indicates which days of the week are available between the start and end Times.

          items:
            description: |+
              Indicates which days of the week are available between the start and end Times.

            allOf:
            - $ref: '#/components/schemas/WeekDay'
            x-data-type: Enum
            x-usage: Property
        allDay:
          type: boolean
          description: |+
            Is this always available? (hence times are irrelevant) e.g. 24 hour service.

          x-data-type: Boolean
          x-usage: Property
        availableStartTime:
          type: string
          description: |+
            The opening time of day. Note: If the AllDay flag is set, then this time is ignored.

          format: date-time
          x-data-type: DateTime
          x-usage: Property
          x-format: time
        availableEndTime:
          type: string
          description: |+
            The closing time of day. Note: If the AllDay flag is set, then this time is ignored.

            The time zone is expected to be for where this HealthcareService is provided at.

          format: date-time
          x-data-type: DateTime
          x-usage: Property
      description: |+
        A collection of times that the Service Site is available.

        More detailed availability information may be provided in associated Schedule/Slot resources.

      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Product/datasets/AvailableTime
    NotAvailableTime:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: string
          description: Identity of category in the product line.
          format: uuid
          x-data-type: Guid
          x-usage: Property
        header:
          description: This header of element with order and period of element activity.
          allOf:
          - $ref: '#/components/schemas/Element'
          x-data-type: Structure
          x-usage: Property
        description:
          type: string
          description: The reason that can be presented to the user as to why this
            time is not available.
          x-data-type: String
          x-usage: Property
        during:
          description: |+
            Service is not available (seasonally or for a public holiday) from this date.



          allOf:
          - $ref: '#/components/schemas/Period'
          x-data-type: Structure
          x-usage: Property
      description: |
        The service or goods is not available during this period of time due to the provided reason.
      x-data-type: Structure
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Product/datasets/NotAvailableTime
    OrganizationRole:
      required:
      - entity
      - identity
      type: object
      properties:
        identity:
          description: Organization role identity, we will use Guid for globally unique
            service id. Name contain name of the Organization role in the organization.
            Name expected to be unique for role in organization.
          allOf:
          - $ref: '#/components/schemas/Identity'
          x-data-type: Structure
          x-usage: Property
        entity:
          description: Organization role is a resource used by API.  Entity maintain
            most common resource information. Parent for organization role entity
            is a organization.
          allOf:
          - $ref: '#/components/schemas/Entity'
          x-data-type: Structure
          x-usage: Property
        type:
          description: Type of the role
          allOf:
          - $ref: '#/components/schemas/OrganizationRoleType'
          x-data-type: Enum
          x-usage: Property
        reference:
          description: 'Reference to actual role specification defined by type. Resource
            defined in organization role type. '
          allOf:
          - $ref: '#/components/schemas/ReferenceIdentity'
          x-data-type: Reference
          x-usage: Property
          x-format: Reference(PractitionerRole)
        telecom:
          type: array
          description: |+
            Contact details that are specific to the role/location/service.


          items:
            description: |+
              Contact details that are specific to the role/location/service.


            allOf:
            - $ref: '#/components/schemas/CodeableConcept'
            x-data-type: Structure
            x-usage: Property
        location:
          type: string
          description: The location(s) at which this role operates.
          format: 'system: Client | application: User | dataType: Location'
          x-data-type: Reference
          x-usage: Property
        availableTime:
          type: array
          description: |
            Times the role service is available
          items:
            description: |
              Times the role service is available
            allOf:
            - $ref: '#/components/schemas/AvailableTime'
            x-data-type: Structure
            x-usage: Property
        notAvailable:
          type: array
          description: |
            Not available during this time due to provided reason
          items:
            description: |
              Not available during this time due to provided reason
            allOf:
            - $ref: '#/components/schemas/NotAvailableTime'
            x-data-type: Structure
            x-usage: Property
        availabilityExceptions:
          type: string
          description: |+
            A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.

          x-data-type: String
          x-usage: Property
        services:
          type: array
          description: |
            The list of services that this worker provides for this role's Organization/Location(s)
          items:
            type: string
            description: |
              The list of services that this worker provides for this role's Organization/Location(s)
            format: 'system: Client | application: Product | dataType: Product'
            x-data-type: Reference
            x-usage: Property
      description: |-
        Role to play in organization. Employees can play multiple or single role in organization.
        Role can define what services provided by the role and in what availability of this role services.
      x-data-type: Resource
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Organization/datasets/OrganizationRole
    Severity:
      type: string
      description: 'Severity of the error. Enumerate classification of the error severity
        in execution path.  '
      enum:
      - "0"
      - "1"
      - "2"
      - "3"
      x-enum-metadata:
      - name: Fatal
        value: "0"
        description: A severe error that causes your system to crash, resulting in
          the loss or corruption of unsaved data.
      - name: Error
        value: "1"
        description: A severe error that might cause the loss or corruption of unsaved
          data. Immediate action must be taken to prevent losing data.
      - name: Warning
        value: "2"
        description: Action must be taken at some stage to prevent a severe error
          from occurring in the future.
      - name: Info
        value: "3"
        description: An informative message, usually describing server activity. No
          action is necessary.
      x-data-type: Enum
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Severity
    Error:
      type: object
      properties:
        code:
          maxLength: 16
          type: string
          description: 'Error code. '
          x-data-type: String
          x-usage: Name
        severity:
          description: 'Severity specified how severe error in current execution path. '
          allOf:
          - $ref: '#/components/schemas/Severity'
          x-data-type: Enum
          x-usage: Property
        text:
          type: string
          description: Error text. When error return text will be formate, based on
            text string, properties and language.
          x-data-type: String
          x-usage: Property
        description:
          type: string
          description: 'Error description contains detailed information about error. '
          x-data-type: String
          x-usage: Description
        entity:
          type: string
          description: URI to object or entity error associated with.
          x-data-type: String
          x-usage: Property
        field:
          type: string
          description: Name of the field error associated with.
          x-data-type: String
          x-usage: Property
      description: |
        Entity encapsulating the details of an error. This allows the recipient to know details about the error and what may have caused the error.
      x-data-type: Resource
      x-version: 1.0.0
      x-path: /organizations/DJet/systems/Client/applications/Datasets/datasets/Error
  parameters:
    EmployeesReadOnly-bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: string
    employeeId:
      name: employeeId
      in: path
      description: Employee Id to fetch and put records
      required: true
      schema:
        type: string
    endTime:
      name: endTime
      in: query
      description: End of time window specified to limit objects with last updated
        in this time window.
      required: false
      schema:
        type: object
    options:
      name: options
      in: query
      description: 'Options specified additional requirements for returned entity.
        For example reconcile option will require to send events to data lake and
        mark as reconciliation. '
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      description: Expression to limit number of entities in response.
      required: false
      schema:
        type: string
    startTime:
      name: startTime
      in: query
      description: Beginning of time window specified to limit objects with last updated
        in this time window.
      required: false
      schema:
        type: object
    OrganizationEmployees-bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: string
    organizationId:
      name: organizationId
      in: path
      description: 'Id of employee operation executed for. When start with $ it is
        Id, else it is name of object. When id not specified '
      required: true
      schema:
        type: string
    OrganizationRoles-bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: string
    organizationRoleId:
      name: organizationRoleId
      in: path
      description: Organization role id to fetch and put records
      required: true
      schema:
        type: string
    OrganizationRolesReadOnly-bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: string
    OrganizationsReadOnly-bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: string
    organizationtId:
      name: organizationtId
      in: path
      description: Organization Id to fetch and put records
      required: true
      schema:
        type: string
    PartyOrganizations-bearer:
      name: bearer
      in: header
      description: JWT Bearer token
      required: false
      schema:
        type: string
    partyId:
      name: partyId
      in: path
      description: 'Id of party operation executed for. When start with $ it is Id,
        else it is name of object. When id not specified '
      required: true
      schema:
        type: string
  requestBodies:
    employee:
      description: Document with employee specification.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
      required: false
    organizationRole:
      description: Document with organization role specification.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationRole'
      required: false
    organization:
      description: Document with organization specification.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
      required: false
